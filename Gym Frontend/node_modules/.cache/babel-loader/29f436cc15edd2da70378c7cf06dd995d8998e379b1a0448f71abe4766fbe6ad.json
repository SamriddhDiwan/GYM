{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRIYANSHU JHA\\\\Desktop\\\\Work\\\\Project\\\\GYM\\\\Gym Frontend\\\\src\\\\Components\\\\CurrentWorkout\\\\CurrentWorkoutPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExerciseCard from \"./Exercisecard\";\nimport HumanBody from \"./HumanBody\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentWorkoutPage(props) {\n  _s();\n  const {\n    addNewSet,\n    currExercises,\n    selectedMuscleGroup,\n    endAndPostWorkoutSession\n  } = useOutletContext();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate('/newSession/newExercise');\n      },\n      children: \"Add New Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), Object.keys(currExercises).map(key => {\n      return /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exerciseName: key,\n        addNewSet: addNewSet,\n        sets: currExercises[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(HumanBody, {\n      selected: selectedMuscleGroup || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endAndPostWorkoutSession,\n      children: \" End Workout Session \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrentWorkoutPage, \"fVMAm0HhksB20vpAqVwjO43Bq40=\", false, function () {\n  return [useOutletContext, useNavigate];\n});\n_c = CurrentWorkoutPage;\nexport default CurrentWorkoutPage;\nvar _c;\n$RefreshReg$(_c, \"CurrentWorkoutPage\");","map":{"version":3,"names":["React","useState","ExerciseCard","HumanBody","useOutletContext","useNavigate","jsxDEV","_jsxDEV","CurrentWorkoutPage","props","_s","addNewSet","currExercises","selectedMuscleGroup","endAndPostWorkoutSession","navigate","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","exerciseName","sets","selected","_c","$RefreshReg$"],"sources":["C:/Users/PRIYANSHU JHA/Desktop/Work/Project/GYM/Gym Frontend/src/Components/CurrentWorkout/CurrentWorkoutPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExerciseCard from \"./Exercisecard\";\r\nimport HumanBody from \"./HumanBody\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction CurrentWorkoutPage(props) {\r\n    const { addNewSet, currExercises, selectedMuscleGroup, endAndPostWorkoutSession } = useOutletContext();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={\r\n                () => { navigate('/newSession/newExercise'); }\r\n            }>Add New Exercise</button>\r\n            {Object.keys(currExercises).map((key) => {\r\n                return (<ExerciseCard\r\n                    exerciseName={key}\r\n                    addNewSet={addNewSet}\r\n                    sets={currExercises[key]}\r\n                />);\r\n            })}\r\n            <HumanBody\r\n                selected={selectedMuscleGroup || []}\r\n            />\r\n            <button onClick={endAndPostWorkoutSession}> End Workout Session </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentWorkoutPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC/B,MAAM;IAAEC,SAAS;IAAEC,aAAa;IAAEC,mBAAmB;IAAEC;EAAyB,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EACtG,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,oBACIE,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAQU,OAAO,EACXA,CAAA,KAAM;QAAEF,QAAQ,CAAC,yBAAyB,CAAC;MAAE,CAChD;MAAAC,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1BC,MAAM,CAACC,IAAI,CAACX,aAAa,CAAC,CAACY,GAAG,CAAEC,GAAG,IAAK;MACrC,oBAAQlB,OAAA,CAACL,YAAY;QACjBwB,YAAY,EAAED,GAAI;QAClBd,SAAS,EAAEA,SAAU;QACrBgB,IAAI,EAAEf,aAAa,CAACa,GAAG;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IACN,CAAC,CAAC,eACFd,OAAA,CAACJ,SAAS;MACNyB,QAAQ,EAAEf,mBAAmB,IAAI;IAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACFd,OAAA;MAAQU,OAAO,EAAEH,wBAAyB;MAAAE,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEd;AAACX,EAAA,CAtBQF,kBAAkB;EAAA,QAC6DJ,gBAAgB,EACnFC,WAAW;AAAA;AAAAwB,EAAA,GAFvBrB,kBAAkB;AAwB3B,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
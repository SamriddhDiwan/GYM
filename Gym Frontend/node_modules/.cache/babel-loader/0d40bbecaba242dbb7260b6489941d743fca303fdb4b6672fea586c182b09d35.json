{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samriddh Diwan\\\\Desktop\\\\GYM\\\\gym\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport ExerciseCard from \"./ExerciseCard\";\nimport NewExercisePage from \"./NewExercisePage\";\nimport exerciseList from \"./Exercise\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currExercises, handleExercises] = useState({\n    \"Chest Press\": [{\n      sno: \"1\",\n      reps: \"10\",\n      weight: \"10\"\n    }]\n  });\n  function addNewSet(newSetDetails, exerciseName) {\n    handleExercises(prev => {\n      var _prev$exerciseName;\n      return {\n        ...prev,\n        [exerciseName]: [...(prev[exerciseName] || []), {\n          sno: (((_prev$exerciseName = prev[exerciseName]) === null || _prev$exerciseName === void 0 ? void 0 : _prev$exerciseName.length) || 0) + 1,\n          reps: newSetDetails.reps,\n          weight: newSetDetails.weight\n        }]\n      };\n    });\n  }\n  function addNewExerciseCard(exerciseName) {\n    handleExercises(prev => ({\n      ...prev,\n      [exerciseName]: []\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Object.keys(currExercises).map(key => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n            exerciseName: key,\n            addNewSet: addNewSet,\n            sets: currExercises[key]\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new-exercise\",\n        element: /*#__PURE__*/_jsxDEV(NewExercisePage, {\n          options: exerciseList,\n          addNewExercise: addNewExerciseCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"7bByVBB87a+S0YRsXdFpbK6qROM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","ExerciseCard","NewExercisePage","exerciseList","jsxDEV","_jsxDEV","App","_s","currExercises","handleExercises","sno","reps","weight","addNewSet","newSetDetails","exerciseName","prev","_prev$exerciseName","length","addNewExerciseCard","children","path","element","Object","keys","map","key","sets","fileName","_jsxFileName","lineNumber","columnNumber","options","addNewExercise","_c","$RefreshReg$"],"sources":["C:/Users/Samriddh Diwan/Desktop/GYM/gym/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport ExerciseCard from \"./ExerciseCard\";\r\nimport NewExercisePage from \"./NewExercisePage\";\r\nimport exerciseList from \"./Exercise\";\r\n\r\nfunction App() {\r\n    const [currExercises, handleExercises] = useState({ \"Chest Press\": [{ sno: \"1\", reps: \"10\", weight: \"10\" }] });\r\n\r\n    function addNewSet(newSetDetails, exerciseName) {\r\n        handleExercises((prev) => ({\r\n            ...prev,\r\n            [exerciseName]: [\r\n                ...(prev[exerciseName] || []),\r\n                {\r\n                    sno: (prev[exerciseName]?.length || 0) + 1,\r\n                    reps: newSetDetails.reps,\r\n                    weight: newSetDetails.weight,\r\n                },\r\n            ],\r\n        }));\r\n    }\r\n\r\n    function addNewExerciseCard(exerciseName) {\r\n        handleExercises((prev) => ({\r\n            ...prev,\r\n            [exerciseName]: [],\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route\r\n                    path=\"/\"\r\n                    element={\r\n                        <div>\r\n                            {Object.keys(currExercises).map((key) => (\r\n                                <ExerciseCard\r\n                                    key={key}\r\n                                    exerciseName={key}\r\n                                    addNewSet={addNewSet}\r\n                                    sets={currExercises[key]}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/new-exercise\"\r\n                    element={\r\n                        <NewExercisePage\r\n                            options={exerciseList}\r\n                            addNewExercise={addNewExerciseCard}\r\n                        />\r\n                    }\r\n                />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC;IAAE,aAAa,EAAE,CAAC;MAAEe,GAAG,EAAE,GAAG;MAAEC,IAAI,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAC;EAAE,CAAC,CAAC;EAE9G,SAASC,SAASA,CAACC,aAAa,EAAEC,YAAY,EAAE;IAC5CN,eAAe,CAAEO,IAAI;MAAA,IAAAC,kBAAA;MAAA,OAAM;QACvB,GAAGD,IAAI;QACP,CAACD,YAAY,GAAG,CACZ,IAAIC,IAAI,CAACD,YAAY,CAAC,IAAI,EAAE,CAAC,EAC7B;UACIL,GAAG,EAAE,CAAC,EAAAO,kBAAA,GAAAD,IAAI,CAACD,YAAY,CAAC,cAAAE,kBAAA,uBAAlBA,kBAAA,CAAoBC,MAAM,KAAI,CAAC,IAAI,CAAC;UAC1CP,IAAI,EAAEG,aAAa,CAACH,IAAI;UACxBC,MAAM,EAAEE,aAAa,CAACF;QAC1B,CAAC;MAET,CAAC;IAAA,CAAC,CAAC;EACP;EAEA,SAASO,kBAAkBA,CAACJ,YAAY,EAAE;IACtCN,eAAe,CAAEO,IAAI,KAAM;MACvB,GAAGA,IAAI;MACP,CAACD,YAAY,GAAG;IACpB,CAAC,CAAC,CAAC;EACP;EAEA,oBACIV,OAAA,CAACR,MAAM;IAAAuB,QAAA,eACHf,OAAA,CAACP,MAAM;MAAAsB,QAAA,gBACHf,OAAA,CAACN,KAAK;QACFsB,IAAI,EAAC,GAAG;QACRC,OAAO,eACHjB,OAAA;UAAAe,QAAA,EACKG,MAAM,CAACC,IAAI,CAAChB,aAAa,CAAC,CAACiB,GAAG,CAAEC,GAAG,iBAChCrB,OAAA,CAACJ,YAAY;YAETc,YAAY,EAAEW,GAAI;YAClBb,SAAS,EAAEA,SAAU;YACrBc,IAAI,EAAEnB,aAAa,CAACkB,GAAG;UAAE,GAHpBA,GAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIX,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACF1B,OAAA,CAACN,KAAK;QACFsB,IAAI,EAAC,eAAe;QACpBC,OAAO,eACHjB,OAAA,CAACH,eAAe;UACZ8B,OAAO,EAAE7B,YAAa;UACtB8B,cAAc,EAAEd;QAAmB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAACxB,EAAA,CAtDQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
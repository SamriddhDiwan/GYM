{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samriddh Diwan\\\\Desktop\\\\GYM\\\\gym\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport ExerciseCard from \"./Exercisecard\";\nimport NewExercise from \"./Searchable\";\nimport exerciseList from \"./Exercise\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currExercises, handleExercises] = useState({\n    \"Chest Press\": [{\n      sno: \"1\",\n      reps: \"10\",\n      weight: \"10\"\n    }]\n  });\n  const [value, setValue] = useState(\"\");\n  function addNewSet(newSetDetails, exerciseName) {\n    handleExercises(prev => {\n      return {\n        ...prev,\n        [exerciseName]: [...prev[exerciseName], {\n          sno: prev[exerciseName].length + 1,\n          reps: newSetDetails.reps,\n          weight: newSetDetails.weight\n        }]\n      };\n    });\n  }\n  ;\n  function addNewExerciseCard(exerciseName) {\n    handleExercises({\n      ...currExercises\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExercise, {\n      options: exercise,\n      label: \"name\",\n      id: \"id\",\n      selectedVal: value,\n      handleChange: val => setValue(val),\n      addNewExercise: addNewExerciseCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), Object.keys(currExercises).map(key => {\n      return /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exerciseName: key,\n        addNewSet: addNewSet,\n        sets: currExercises[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"7YNc5638D48ejFp/78nHUbD9GwM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","ExerciseCard","NewExercise","exerciseList","jsxDEV","_jsxDEV","App","_s","currExercises","handleExercises","sno","reps","weight","value","setValue","addNewSet","newSetDetails","exerciseName","prev","length","addNewExerciseCard","children","options","exercise","label","id","selectedVal","handleChange","val","addNewExercise","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","sets","_c","$RefreshReg$"],"sources":["C:/Users/Samriddh Diwan/Desktop/GYM/gym/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport ExerciseCard from \"./Exercisecard\";\r\nimport NewExercise from \"./Searchable\";\r\nimport exerciseList from \"./Exercise\";\r\nfunction App() {\r\n    const [currExercises, handleExercises] = useState({ \"Chest Press\": [ {sno: \"1\", reps: \"10\", weight: \"10\"} ] });\r\n    const [value, setValue] = useState(\"\");\r\n    function addNewSet(newSetDetails, exerciseName) {\r\n        handleExercises((prev) => {\r\n            return {\r\n                ...prev,\r\n                [exerciseName]: [\r\n                    ...(prev[exerciseName]),\r\n                    {\r\n                        sno: prev[exerciseName].length+ 1,\r\n                        reps: newSetDetails.reps,\r\n                        weight: newSetDetails.weight\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n        )\r\n    };\r\n    function addNewExerciseCard(exerciseName) {\r\n        handleExercises({...currExercises});\r\n    }\r\n    return (\r\n        <div>\r\n\r\n\r\n\r\n\r\n\r\n            <NewExercise\r\n                options={exercise}\r\n                label=\"name\"\r\n                id=\"id\"\r\n                selectedVal={value}\r\n                handleChange={(val) => setValue(val)}\r\n                addNewExercise={addNewExerciseCard}\r\n            />\r\n\r\n            {Object.keys(currExercises).map((key) => {\r\n                return (<ExerciseCard\r\n                    exerciseName={key}\r\n                    addNewSet={addNewSet}\r\n                    sets={currExercises[key]}\r\n                />);\r\n            })}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,YAAY,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC;IAAE,aAAa,EAAE,CAAE;MAACW,GAAG,EAAE,GAAG;MAAEC,IAAI,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI,CAAC;EAAG,CAAC,CAAC;EAC9G,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,SAASgB,SAASA,CAACC,aAAa,EAAEC,YAAY,EAAE;IAC5CR,eAAe,CAAES,IAAI,IAAK;MACtB,OAAO;QACH,GAAGA,IAAI;QACP,CAACD,YAAY,GAAG,CACZ,GAAIC,IAAI,CAACD,YAAY,CAAE,EACvB;UACIP,GAAG,EAAEQ,IAAI,CAACD,YAAY,CAAC,CAACE,MAAM,GAAE,CAAC;UACjCR,IAAI,EAAEK,aAAa,CAACL,IAAI;UACxBC,MAAM,EAAEI,aAAa,CAACJ;QAC1B,CAAC;MAET,CAAC;IACL,CACA,CAAC;EACL;EAAC;EACD,SAASQ,kBAAkBA,CAACH,YAAY,EAAE;IACtCR,eAAe,CAAC;MAAC,GAAGD;IAAa,CAAC,CAAC;EACvC;EACA,oBACIH,OAAA;IAAAgB,QAAA,gBAMIhB,OAAA,CAACH,WAAW;MACRoB,OAAO,EAAEC,QAAS;MAClBC,KAAK,EAAC,MAAM;MACZC,EAAE,EAAC,IAAI;MACPC,WAAW,EAAEb,KAAM;MACnBc,YAAY,EAAGC,GAAG,IAAKd,QAAQ,CAACc,GAAG,CAAE;MACrCC,cAAc,EAAET;IAAmB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EAEDC,MAAM,CAACC,IAAI,CAAC3B,aAAa,CAAC,CAAC4B,GAAG,CAAEC,GAAG,IAAK;MACrC,oBAAQhC,OAAA,CAACJ,YAAY;QACjBgB,YAAY,EAAEoB,GAAI;QAClBtB,SAAS,EAAEA,SAAU;QACrBuB,IAAI,EAAE9B,aAAa,CAAC6B,GAAG;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IACN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKD,CAAC;AAEd;AAAC1B,EAAA,CAnDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
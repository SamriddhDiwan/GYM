{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samriddh Diwan\\\\Desktop\\\\GYM\\\\gym\\\\Gym Frontend\\\\src\\\\Components\\\\CurrentWorkout\\\\CurrentWorkoutMain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentWorkoutMain() {\n  _s();\n  const [currExercises, handleExercises] = useState({\n    \"Chest Press\": [{\n      sno: \"1\",\n      reps: \"10\",\n      weight: \"10\"\n    }]\n  });\n  const [value, setValue] = useState(\"\");\n  const [selectedMuscleGroup, setSelectedMuscleGroup] = useState([]);\n  function addNewSet(newSetDetails, exerciseName) {\n    handleExercises(prev => {\n      return {\n        ...prev,\n        [exerciseName]: [...prev[exerciseName], {\n          sno: prev[exerciseName].length + 1,\n          reps: newSetDetails.reps,\n          weight: newSetDetails.weight\n        }]\n      };\n    });\n  }\n  ;\n  function addNewExerciseCard(exerciseName) {\n    setSelectedMuscleGroup([...selectedMuscleGroup, exerciseName.muscleGrp[0]]);\n    console.log(selectedMuscleGroup);\n    handleExercises({\n      ...currExercises,\n      [exerciseName.name]: []\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Outlet, {\n      context: {\n        value: value,\n        setValue: setValue,\n        addNewExerciseCard: addNewExerciseCard,\n        addNewSet: addNewSet,\n        currExercises: currExercises,\n        selectedMuscleGroup: selectedMuscleGroup\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrentWorkoutMain, \"IqdQgkFUUF9isfG6XVEYDV0ZqO8=\");\n_c = CurrentWorkoutMain;\nexport default CurrentWorkoutMain;\nvar _c;\n$RefreshReg$(_c, \"CurrentWorkoutMain\");","map":{"version":3,"names":["React","useState","Outlet","jsxDEV","_jsxDEV","CurrentWorkoutMain","_s","currExercises","handleExercises","sno","reps","weight","value","setValue","selectedMuscleGroup","setSelectedMuscleGroup","addNewSet","newSetDetails","exerciseName","prev","length","addNewExerciseCard","muscleGrp","console","log","name","children","context","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Samriddh Diwan/Desktop/GYM/gym/Gym Frontend/src/Components/CurrentWorkout/CurrentWorkoutMain.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nfunction CurrentWorkoutMain() {\r\n    const [currExercises, handleExercises] = useState({ \"Chest Press\": [ {sno: \"1\", reps: \"10\", weight: \"10\"} ] });\r\n    const [value, setValue] = useState(\"\");\r\n    const [selectedMuscleGroup,setSelectedMuscleGroup]=useState([]);\r\n    function addNewSet(newSetDetails, exerciseName) {\r\n        handleExercises((prev) => {\r\n            return {\r\n                ...prev,\r\n                [exerciseName]: [\r\n                    ...(prev[exerciseName]),\r\n                    {\r\n                        sno: prev[exerciseName].length+ 1,\r\n                        reps: newSetDetails.reps,\r\n                        weight: newSetDetails.weight\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n        )\r\n    };\r\n    function addNewExerciseCard(exerciseName) {\r\n        setSelectedMuscleGroup([...selectedMuscleGroup,exerciseName.muscleGrp[0]]);\r\n        console.log(selectedMuscleGroup);\r\n        handleExercises({...currExercises,[exerciseName.name]:[]});\r\n    }\r\n    return (\r\n        <div>\r\n\r\n        <Outlet\r\n            context={{value:value,setValue:setValue,addNewExerciseCard:addNewExerciseCard,addNewSet:addNewSet,currExercises:currExercises,selectedMuscleGroup:selectedMuscleGroup}}\r\n\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentWorkoutMain;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC;IAAE,aAAa,EAAE,CAAE;MAACQ,GAAG,EAAE,GAAG;MAAEC,IAAI,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI,CAAC;EAAG,CAAC,CAAC;EAC9G,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,mBAAmB,EAACC,sBAAsB,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EAC/D,SAASe,SAASA,CAACC,aAAa,EAAEC,YAAY,EAAE;IAC5CV,eAAe,CAAEW,IAAI,IAAK;MACtB,OAAO;QACH,GAAGA,IAAI;QACP,CAACD,YAAY,GAAG,CACZ,GAAIC,IAAI,CAACD,YAAY,CAAE,EACvB;UACIT,GAAG,EAAEU,IAAI,CAACD,YAAY,CAAC,CAACE,MAAM,GAAE,CAAC;UACjCV,IAAI,EAAEO,aAAa,CAACP,IAAI;UACxBC,MAAM,EAAEM,aAAa,CAACN;QAC1B,CAAC;MAET,CAAC;IACL,CACA,CAAC;EACL;EAAC;EACD,SAASU,kBAAkBA,CAACH,YAAY,EAAE;IACtCH,sBAAsB,CAAC,CAAC,GAAGD,mBAAmB,EAACI,YAAY,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1EC,OAAO,CAACC,GAAG,CAACV,mBAAmB,CAAC;IAChCN,eAAe,CAAC;MAAC,GAAGD,aAAa;MAAC,CAACW,YAAY,CAACO,IAAI,GAAE;IAAE,CAAC,CAAC;EAC9D;EACA,oBACIrB,OAAA;IAAAsB,QAAA,eAEAtB,OAAA,CAACF,MAAM;MACHyB,OAAO,EAAE;QAACf,KAAK,EAACA,KAAK;QAACC,QAAQ,EAACA,QAAQ;QAACQ,kBAAkB,EAACA,kBAAkB;QAACL,SAAS,EAACA,SAAS;QAACT,aAAa,EAACA,aAAa;QAACO,mBAAmB,EAACA;MAAmB;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1K;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd;AAACzB,EAAA,CAlCQD,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AAoC3B,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
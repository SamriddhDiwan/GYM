{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRIYANSHU JHA\\\\Desktop\\\\Work\\\\Project\\\\GYM\\\\client\\\\src\\\\pages\\\\CurrentWorkoutMain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, Outlet } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useAuth } from '../hooks/useAuth';\nimport NewSessionSetup from './NewSessionSetup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentWorkoutMain() {\n  _s();\n  const navigate = useNavigate();\n  const [currExercises, handleExercises] = useState({});\n  const [value, setValue] = useState(\"\");\n  const [selectedMuscleGroup, setSelectedMuscleGroup] = useState([]);\n  const [sessionConfig, setSessionConfig] = useState(null);\n  const {\n    user\n  } = useAuth();\n  async function EndAndPostWorkoutSession() {\n    try {\n      const userData = {\n        user: user,\n        data: currExercises,\n        sessionConfig: sessionConfig\n      };\n      await axios.post(\"http://localhost:3001/api/exercises/add\", userData, {\n        withCredentials: true\n      });\n      navigate('/');\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  function addNewSet(newSetDetails, exerciseName) {\n    handleExercises(prev => {\n      return {\n        ...prev,\n        [exerciseName]: [...prev[exerciseName], {\n          sno: prev[exerciseName].length + 1,\n          reps: newSetDetails.reps,\n          weight: newSetDetails.weight\n        }]\n      };\n    });\n  }\n  ;\n  function addNewExerciseCard(exerciseName) {\n    setSelectedMuscleGroup([...selectedMuscleGroup, ...exerciseName.muscleGrp]);\n    console.log(selectedMuscleGroup);\n    handleExercises({\n      ...currExercises,\n      [exerciseName.name]: []\n    });\n  }\n  if (!sessionConfig) {\n    return /*#__PURE__*/_jsxDEV(NewSessionSetup, {\n      setSessionConfig: setSessionConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Outlet, {\n      context: {\n        value: value,\n        setValue: setValue,\n        addNewExerciseCard: addNewExerciseCard,\n        addNewSet: addNewSet,\n        currExercises: currExercises,\n        selectedMuscleGroup: selectedMuscleGroup,\n        EndAndPostWorkoutSession: EndAndPostWorkoutSession,\n        sessionConfig: sessionConfig,\n        setSessionConfig: setSessionConfig\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrentWorkoutMain, \"4BJElNNYsl80cbW25VPw5vtjxR8=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CurrentWorkoutMain;\nexport default CurrentWorkoutMain;\nvar _c;\n$RefreshReg$(_c, \"CurrentWorkoutMain\");","map":{"version":3,"names":["React","useState","useNavigate","Outlet","axios","useAuth","NewSessionSetup","jsxDEV","_jsxDEV","CurrentWorkoutMain","_s","navigate","currExercises","handleExercises","value","setValue","selectedMuscleGroup","setSelectedMuscleGroup","sessionConfig","setSessionConfig","user","EndAndPostWorkoutSession","userData","data","post","withCredentials","e","console","log","addNewSet","newSetDetails","exerciseName","prev","sno","length","reps","weight","addNewExerciseCard","muscleGrp","name","fileName","_jsxFileName","lineNumber","columnNumber","children","context","_c","$RefreshReg$"],"sources":["C:/Users/PRIYANSHU JHA/Desktop/Work/Project/GYM/client/src/pages/CurrentWorkoutMain.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {useNavigate, Outlet } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useAuth } from '../hooks/useAuth';\nimport NewSessionSetup from './NewSessionSetup';\n\nfunction CurrentWorkoutMain() {\n    const navigate=useNavigate();\n    const [currExercises, handleExercises] = useState({});\n    const [value, setValue] = useState(\"\");\n    const [selectedMuscleGroup, setSelectedMuscleGroup] = useState([]);\n    const [sessionConfig, setSessionConfig] = useState(null);\n    const {user}=useAuth();\n\n    async function EndAndPostWorkoutSession() {\n        try{\n            const userData={\n                user:user,\n                data:currExercises,\n                sessionConfig: sessionConfig\n            }\n            await axios.post(\"http://localhost:3001/api/exercises/add\",userData,{withCredentials:true});\n            navigate('/');\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    function addNewSet(newSetDetails, exerciseName) {\n        handleExercises((prev) => {\n            return {\n                ...prev,\n                [exerciseName]: [\n                    ...(prev[exerciseName]),\n                    {\n                        sno: prev[exerciseName].length + 1,\n                        reps: newSetDetails.reps,\n                        weight: newSetDetails.weight\n                    }\n                ]\n            };\n        })\n    };\n\n    function addNewExerciseCard(exerciseName) {\n        setSelectedMuscleGroup([...selectedMuscleGroup, ...exerciseName.muscleGrp]);\n        console.log(selectedMuscleGroup);\n        handleExercises({ ...currExercises, [exerciseName.name]: [] });\n    }\n\n    if (!sessionConfig) {\n        return <NewSessionSetup setSessionConfig={setSessionConfig} />;\n    }\n\n    return (\n        <div>\n            <Outlet\n                context={{ \n                    value: value, \n                    setValue: setValue, \n                    addNewExerciseCard: addNewExerciseCard, \n                    addNewSet: addNewSet, \n                    currExercises: currExercises, \n                    selectedMuscleGroup: selectedMuscleGroup, \n                    EndAndPostWorkoutSession: EndAndPostWorkoutSession,\n                    sessionConfig: sessionConfig,\n                    setSessionConfig: setSessionConfig\n                }}\n            />\n        </div>\n    );\n}\n\nexport default CurrentWorkoutMain;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
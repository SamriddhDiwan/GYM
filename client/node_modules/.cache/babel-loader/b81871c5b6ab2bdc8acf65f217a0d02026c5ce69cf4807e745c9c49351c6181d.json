{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PRIYANSHU JHA\\\\Desktop\\\\Work\\\\Project\\\\GYM\\\\client\\\\src\\\\hooks\\\\useAuth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth/me\", {}, {\n        withCredentials: true\n      });\n      if (response.data.user) {\n        setUser(response.data.user);\n      } else {\n        setUser(null);\n      }\n    } catch (e) {\n      console.log(\"Auth check failed:\", e);\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const signIn = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth/login\", {\n        email: email,\n        password: password\n      }, {\n        withCredentials: true\n      });\n      if (!response.data.success) {\n        const error = response.data.message || \"Failed to sign in\";\n        throw new Error(error);\n      }\n\n      // Set user immediately after successful login\n      setUser(response.data.id);\n      return response.data;\n    } catch (error) {\n      // Handle different types of errors\n      if (error.response) {\n        var _error$response$data;\n        // Server responded with error status\n        const message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Invalid credentials\";\n        throw new Error(message);\n      } else if (error.request) {\n        // Network error\n        throw new Error(\"Network error. Please check your connection.\");\n      } else {\n        // Other errors\n        throw new Error(error.message || \"Sign in failed\");\n      }\n    }\n  };\n  const signUp = async (email, password, name) => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth/register\", {\n        name: name,\n        email: email,\n        password: password\n      }, {\n        withCredentials: true\n      });\n      if (!response.data.success) {\n        const error = response.data.message || \"Failed to sign up\";\n        throw new Error(error);\n      }\n\n      // Set user immediately after successful registration\n      setUser(response.data.id);\n      return response.data;\n    } catch (error) {\n      // Handle different types of errors\n      if (error.response) {\n        var _error$response$data2;\n        // Server responded with error status\n        const message = ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || \"Registration failed\";\n        throw new Error(message);\n      } else if (error.request) {\n        // Network error\n        throw new Error(\"Network error. Please check your connection.\");\n      } else {\n        // Other errors\n        throw new Error(error.message || \"Sign up failed\");\n      }\n    }\n  };\n  const signOut = async () => {\n    try {\n      await axios.post(\"http://localhost:3001/auth/logout\", {}, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.log(\"Logout error:\", error);\n    } finally {\n      setUser(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signIn,\n      signOut,\n      signUp,\n      isLoading,\n      checkAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","user","setUser","isLoading","setIsLoading","checkAuth","response","post","withCredentials","data","e","console","log","signIn","email","password","success","error","message","Error","id","_error$response$data","request","signUp","name","_error$response$data2","signOut","Provider","value","fileName","lineNumber","columnNumber","_c","useAuth","context","$RefreshReg$"],"sources":["C:/Users/PRIYANSHU JHA/Desktop/Work/Project/GYM/client/src/hooks/useAuth.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useState, useEffect, useContext } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst AuthContext = createContext(undefined)\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    checkAuth()\r\n  }, [])\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3001/auth/me\",\r\n        {},\r\n        {\r\n          withCredentials: true,\r\n        },\r\n      )\r\n      if (response.data.user) {\r\n        setUser(response.data.user)\r\n      } else {\r\n        setUser(null)\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Auth check failed:\", e)\r\n      setUser(null)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const signIn = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3001/auth/login\",\r\n        {\r\n          email: email,\r\n          password: password,\r\n        },\r\n        { withCredentials: true },\r\n      )\r\n\r\n      if (!response.data.success) {\r\n        const error = response.data.message || \"Failed to sign in\"\r\n        throw new Error(error)\r\n      }\r\n\r\n      // Set user immediately after successful login\r\n      setUser(response.data.id)\r\n      return response.data\r\n    } catch (error) {\r\n      // Handle different types of errors\r\n      if (error.response) {\r\n        // Server responded with error status\r\n        const message = error.response.data?.message || \"Invalid credentials\"\r\n        throw new Error(message)\r\n      } else if (error.request) {\r\n        // Network error\r\n        throw new Error(\"Network error. Please check your connection.\")\r\n      } else {\r\n        // Other errors\r\n        throw new Error(error.message || \"Sign in failed\")\r\n      }\r\n    }\r\n  }\r\n\r\n  const signUp = async (email, password, name) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3001/auth/register\",\r\n        {\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        },\r\n        { withCredentials: true },\r\n      )\r\n\r\n      if (!response.data.success) {\r\n        const error = response.data.message || \"Failed to sign up\"\r\n        throw new Error(error)\r\n      }\r\n\r\n      // Set user immediately after successful registration\r\n      setUser(response.data.id)\r\n      return response.data\r\n    } catch (error) {\r\n      // Handle different types of errors\r\n      if (error.response) {\r\n        // Server responded with error status\r\n        const message = error.response.data?.message || \"Registration failed\"\r\n        throw new Error(message)\r\n      } else if (error.request) {\r\n        // Network error\r\n        throw new Error(\"Network error. Please check your connection.\")\r\n      } else {\r\n        // Other errors\r\n        throw new Error(error.message || \"Sign up failed\")\r\n      }\r\n    }\r\n  }\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/auth/logout\", {}, { withCredentials: true })\r\n    } catch (error) {\r\n      console.log(\"Logout error:\", error)\r\n    } finally {\r\n      setUser(null)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, signIn, signOut, signUp, isLoading, checkAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext)\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\")\r\n  }\r\n  return context\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}